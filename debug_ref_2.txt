motion_type_bins=[17, 0, 19, 151] orientation_bins=[12, 10, 14]
its training
Namespace(evaluate=False, base_dir='/home/pradyumngoya/working_dr', data_root='snippets/data/partnet_mobility_root/fine_transformer_mobilities', pretraining=False, resume_train=False, test_ckpt_dir=None, base_output='./train_output', checkpoint='checkpoint', runs='runs', logs='logs.txt', model='transformer', loss_red='mean', features_reduce='mean', not_enable_flash=False, obb_red='mean', num_layers=1, use_type_weights=False, use_orientation_weights=False, best_model='model_best.pth.tar', batch_size=1, max_seq_len=13, num_workers=1, loop=1, max_shapes=1000000000, category='Display', epochs=1000, lr=0.0005, min_lr=5e-05, resume_epoch=0, warmup_epochs=0, weight_decay=0.01, device='cuda:0', test=False)
checkpoint='./train_output/2024-07-18_01_41/checkpoint' args.category='Display' args.batch_size=1
self.data_path='/home/pradyumngoya/working_dr/snippets/data/partnet_mobility_root/fine_transformer_mobilities'
self.data_path='/home/pradyumngoya/working_dr/snippets/data/partnet_mobility_root/fine_transformer_mobilities'
self.data_path='/home/pradyumngoya/working_dr/snippets/data/partnet_mobility_root/fine_transformer_mobilities'
len(train_dataset)=25
len(test_dataset)=4
len(val_dataset)=3
dataloaders are working well
starting training
  0%|          | 0/25 [00:00<?, ?it/s]tensor([False, False,  True, False, False, False, False], device='cuda:0')
tensor([   0,    0, 1000,    0,    0,    0,    0], device='cuda:0',
       dtype=torch.int32)
orientation_mask=tensor([False, False,  True, False, False, False, False], device='cuda:0')
point_mask=tensor([False, False,  True, False, False, False, False], device='cuda:0')
predicted_orientation_label=tensor([[-0.1315,  0.3203, -0.8857],
        [ 1.2728, -0.3904, -0.3558],
        [ 0.4882, -0.8500, -1.3382],
        [ 0.8547, -0.1093,  0.6526],
        [ 0.4864, -0.7746,  1.4140],
        [ 0.7745,  2.0168,  0.7037],
        [ 0.5588, -0.5942, -0.2775]], device='cuda:0',
       grad_fn=<AddmmBackward0>)
predicted_orientation_label=tensor([[ 0.4882, -0.8500, -1.3382]], device='cuda:0',
       grad_fn=<IndexBackward0>)
all_g_orientation_label=tensor([[1., 0., 0.],
        [1., 0., 0.],
        [0., 1., 0.],
        [1., 0., 0.],
        [1., 0., 0.],
        [1., 0., 0.],
        [1., 0., 0.]], device='cuda:0')
g_orientation_label=tensor([[0., 1., 0.]], device='cuda:0')
g_residual=tensor([[[-1.,  0.,  0.],
         [ 0.,  0.,  0.],
         [ 0.,  0.,  0.]],

        [[-1.,  0.,  0.],
         [ 0.,  0.,  0.],
         [ 0.,  0.,  0.]],

        [[ 0.,  0.,  0.],
         [ 0.,  0.,  0.],
         [ 0.,  0.,  0.]],

        [[-1.,  0.,  0.],
         [ 0.,  0.,  0.],
         [ 0.,  0.,  0.]],

        [[-1.,  0.,  0.],
         [ 0.,  0.,  0.],
         [ 0.,  0.,  0.]],

        [[-1.,  0.,  0.],
         [ 0.,  0.,  0.],
         [ 0.,  0.,  0.]],

        [[-1.,  0.,  0.],
         [ 0.,  0.,  0.],
         [ 0.,  0.,  0.]]], device='cuda:0')
g_residual=tensor([[[0., 0., 0.],
         [0., 0., 0.],
         [0., 0., 0.]]], device='cuda:0')
predicted_residual=tensor([[[-1.8585e+00, -1.8366e+00, -4.5239e-02],
         [-9.0467e-01,  1.8633e+00,  1.3086e-01],
         [-1.0573e+00,  8.0879e-02, -8.9003e-01]],

        [[-8.6500e-01, -4.8043e-02, -2.0207e-01],
         [ 8.1208e-01, -6.3333e-01, -1.2574e+00],
         [ 4.9578e-02, -3.7777e-01,  7.3996e-01]],

        [[ 2.0390e-01, -6.7848e-01, -1.1157e+00],
         [-9.9731e-01,  3.4884e-04, -2.2119e-01],
         [-7.5876e-01, -9.4234e-01,  7.1530e-01]],

        [[-6.8623e-01, -7.6806e-01,  3.1754e-01],
         [-1.0297e+00,  5.3440e-01, -6.8770e-02],
         [-4.3769e-01, -8.0236e-01,  1.7831e-01]],

        [[ 1.6319e-01, -9.9875e-01,  3.0337e-01],
         [-5.7946e-01, -1.0555e+00,  9.9528e-01],
         [-7.8977e-01, -1.3994e+00,  8.9348e-01]],

        [[-6.8632e-01,  8.7675e-02, -2.4952e-01],
         [ 7.7953e-02, -1.4969e-03,  7.6298e-01],
         [ 7.1878e-01,  1.6216e-01,  3.1849e-01]],

        [[-7.5683e-01,  1.3161e-01,  5.0535e-01],
         [-2.7405e-01,  6.2229e-01, -2.5740e-02],
         [-3.8475e-01, -8.4485e-01, -5.3122e-01]]], device='cuda:0',
       grad_fn=<ViewBackward0>)
predicted_residual=tensor([[[ 2.0390e-01, -6.7848e-01, -1.1157e+00],
         [-9.9731e-01,  3.4884e-04, -2.2119e-01],
         [-7.5876e-01, -9.4234e-01,  7.1530e-01]]], device='cuda:0',
       grad_fn=<IndexBackward0>)
predicted_rotation_point=tensor([[[ 0.3785, -0.6833, -1.6469],
         [ 1.1612, -0.1101,  0.1638],
         [-0.9457,  1.4043, -0.3799]],

        [[-2.3311, -0.8702, -0.0027],
         [ 0.2904, -1.4868, -0.3116],
         [ 1.4229,  1.6120,  2.1686]],

        [[ 1.3816, -1.7086, -1.1621],
         [-0.0046, -0.3922,  0.6611],
         [ 0.3075, -0.6574,  1.2695]],

        [[ 0.2145, -0.4189, -0.2543],
         [ 1.2018, -0.3870, -0.5402],
         [-0.3386, -1.5612,  0.3263]],

        [[-0.9852, -0.8985,  0.1675],
         [-0.0612, -0.7554,  1.3331],
         [ 1.4966,  0.2652,  0.2348]],

        [[-1.4754,  0.0632, -1.6585],
         [-1.4862, -0.9017,  0.1851],
         [-0.8425,  0.8504, -0.2436]],

        [[-1.3677, -0.7581,  0.1716],
         [ 0.1062, -1.1995, -0.5840],
         [-0.8616,  1.7938,  1.6329]]], device='cuda:0',
       grad_fn=<ViewBackward0>)
predicted_rotation_point=tensor([[[ 1.3816, -1.7086, -1.1621],
         [-0.0046, -0.3922,  0.6611],
         [ 0.3075, -0.6574,  1.2695]]], device='cuda:0',
       grad_fn=<IndexBackward0>)
g_rotation_point=tensor([[[0.0240, 0.0006, 0.0004],
         [0.0240, 0.0006, 0.0004],
         [0.0240, 0.0006, 0.0004]],

        [[0.0240, 0.0006, 0.0004],
         [0.0240, 0.0006, 0.0004],
         [0.0240, 0.0006, 0.0004]],

        [[0.0240, 0.0006, 0.0004],
         [0.0074, 0.0006, 0.0031],
         [0.0240, 0.0006, 0.0004]],

        [[0.0240, 0.0006, 0.0004],
         [0.0240, 0.0006, 0.0004],
         [0.0240, 0.0006, 0.0004]],

        [[0.0240, 0.0006, 0.0004],
         [0.0240, 0.0006, 0.0004],
         [0.0240, 0.0006, 0.0004]],

        [[0.0240, 0.0006, 0.0004],
         [0.0240, 0.0006, 0.0004],
         [0.0240, 0.0006, 0.0004]],

        [[0.0240, 0.0006, 0.0004],
         [0.0240, 0.0006, 0.0004],
         [0.0240, 0.0006, 0.0004]]], device='cuda:0')
g_rotation_point=tensor([[[0.0240, 0.0006, 0.0004],
         [0.0074, 0.0006, 0.0031],
         [0.0240, 0.0006, 0.0004]]], device='cuda:0')
  0%|          | 0/25 [00:00<?, ?it/s]
Traceback (most recent call last):
  File "/home/pradyumngoya/working_dr/Partnet/Unsupervised/attention_model/train.py", line 442, in <module>
    main(args)
  File "/home/pradyumngoya/working_dr/Partnet/Unsupervised/attention_model/train.py", line 408, in main
    losses, errors= train(additional_arguments,train_loader, model,multitaskloss_instance, optimizer,motion_lfn,orientation_lfn,residual_lfn,point_lfn,)
  File "/home/pradyumngoya/working_dr/Partnet/Unsupervised/attention_model/train.py", line 134, in train
    type_loss, orientation_loss, residual_loss, point_loss = compute_loss(args,orientation_weights,output,motion_lfn,orientation_lfn,residual_lfn,point_lfn)
  File "/home/pradyumngoya/working_dr/Partnet/Unsupervised/attention_model/utils/misc.py", line 174, in compute_loss
    results = compute_relevant(args,output)
  File "/home/pradyumngoya/working_dr/Partnet/Unsupervised/attention_model/utils/misc.py", line 139, in compute_relevant
    raise KeyboardInterrupt
KeyboardInterrupt
